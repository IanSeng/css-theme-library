{"version":3,"file":"bin.js","sourceRoot":"","sources":["../src/bin.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { cac } from 'cac';\n\nimport main from './';\nimport { isObject } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst PKG: unknown = require('../package.json');\n\nlet pkgName: string | undefined;\nlet pkgVersion: string | undefined;\nlet pkgDescription = '';\nif (isObject(PKG)) {\n    if (typeof PKG.name === 'string') pkgName = PKG.name;\n    if (typeof PKG.version === 'string') pkgVersion = PKG.version;\n    if (typeof PKG.description === 'string') pkgDescription = PKG.description;\n}\n\nconst cli = cac(pkgName);\nif (pkgVersion) {\n    cli.version(pkgVersion, '-V, -v, --version');\n}\ncli.help(\n    pkgDescription\n        ? (sections) => {\n              sections.splice(1, 0, { body: pkgDescription });\n          }\n        : undefined,\n);\n\ncli.option('--push', '`git push` the added tag to the remote repository');\ncli.option('--verbose', 'show details of executed git commands');\ncli.option('-n, --dry-run', 'perform a trial run with no changes made');\n\nif (cli.commands.length <= 0) {\n    cli.usage('[options]');\n}\n\n(() => {\n    const { options } = cli.parse();\n\n    if (options.version || options.help) {\n        return;\n    }\n\n    const unknownOptions = Object.keys(options).filter(\n        (name) => name !== '--' && !cli.globalCommand.hasOption(name),\n    );\n    if (unknownOptions.length > 0) {\n        process.exitCode = 1;\n        console.error(\n            `unknown ${unknownOptions.length > 1 ? 'options' : 'option'}: ` +\n                `${unknownOptions\n                    .map((name) =>\n                        /^[^-]$/.test(name) ? `-${name}` : `--${name}`,\n                    )\n                    .join(' ')}\\n` +\n                `Try \\`${cli.name} --help\\` for valid options.`,\n        );\n        return;\n    }\n\n    main({\n        push: options.push,\n        verbose: options.verbose,\n        dryRun: options.dryRun,\n    }).catch((error) => {\n        process.exitCode = 1;\n        console.error(error instanceof Error ? error.message : error);\n    });\n})();\n"]}