/// <reference types="node" />
import type * as childProcess from 'child_process';
export interface PkgDataInterface {
    version: string;
    [index: string]: unknown;
}
export declare function isObject(value: unknown): value is Record<string, unknown>;
export declare function relativePath(pathStr: string): string;
export declare function isPkgData(value: unknown): value is PkgDataInterface;
export declare function readJSONFile(filepath: string): Promise<unknown>;
/**
 * @see https://github.com/nodejs/node/blob/v12.13.0/lib/child_process.js#L178-L390
 */
export declare function execFileAsync(...args: [string, (readonly string[])?, childProcess.SpawnOptions?]): Promise<{
    readonly stdout: string;
    readonly stderr: string;
}>;
export declare function printVerbose(message: string): void;
export declare function endPrintVerbose(): void;
/**
 * @see https://github.com/mysticatea/npm-run-all/blob/v4.1.5/lib/run-task.js#L157-L174
 */
export declare function getNpmExecPath(): {
    execPath: string;
    spawnArgs: string[];
    isYarn: boolean;
};
export declare function getConfig(keyMap: {
    npm: string;
    yarn?: string;
}): Promise<string>;
//# sourceMappingURL=utils.d.ts.map